{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\howTo.svelte",
    "..\\..\\progressBar.svelte",
    "..\\..\\timer.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import HowTo from './howTo.svelte';\r\n    import Timer from './timer.svelte';\r\n\r\n    let audio;\r\n\r\n    function timerEnds(e)\r\n    {\r\n        audio.play();\r\n        const value = e.detail.mensaje;\r\n        console.log(value);\r\n    }\r\n</script>\r\n\r\n<h1>Hand Washing App</h1>\r\n\r\n<Timer on:end={timerEnds} />\r\n<HowTo />\r\n\r\n<h3>\r\n  <a href=\"https://vid.alarabiya.net/images/2020/03/22/1ff220bb-03ef-4911-b8e1-32f72eed355e/1ff220bb-03ef-4911-b8e1-32f72eed355e.PNG\">Picture source</a>\r\n  <a href=\"https://english.alarabiya.net/en/coronavirus/2020/03/22/Coronavirus-Hand-washing-is-important-here-s-how-to-do-it-effectively\">Sound source</a>\r\n</h3>\r\n\r\n<audio bind:this={audio}>\r\n    <source src=\"sound.wav\" />\r\n</audio>\r\n\r\n\r\n<style>\r\n    h1, h3 {\r\n        text-align: center\r\n    }\r\n</style>",
    "<style>\r\n    img {\r\n        width: 100%;\r\n    }\r\n</style>\r\n\r\n<div bp=\"grid\">\r\n  <img bp=\"offset-5@md 4@md @12sm\" src=\"handWashing.png\" alt=\"lavado de manos\">\r\n</div>",
    "<script>\r\n    export let progress = 0;\r\n</script>\r\n\r\n<style>\r\n    .progress-container {\r\n        margin: 20px 0;\r\n        border: solid rgb(194, 194, 194) 1px;\r\n    }\r\n\r\n    .progress-bar {\r\n        height: 30px;\r\n        background-color: rgb(77, 199, 55)\r\n    }\r\n</style>\r\n\r\n<div bp=\"grid\">\r\n    <div bp=\"offset-5@md 4@md @12sm\" class=\"progress-container\">\r\n        <div class=\"progress-bar\" style=\"width:{progress}%\">\r\n            <span class=\"sr-only\">{progress}%</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
    "<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  import ProgressBar from './progressBar.svelte';\r\n  let isRunning = false;\r\n\r\n  $: progress = (totalSeconds - secondsLeft)/totalSeconds * 100;\r\n\r\n  const totalSeconds = 3;\r\n  let secondsLeft = totalSeconds;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function startTimer() {\r\n    const timer= setInterval(() => {\r\n      isRunning = true;\r\n      secondsLeft -= 1;\r\n      \r\n      if(secondsLeft == -1) {\r\n        clearInterval(timer);\r\n        secondsLeft = totalSeconds;\r\n        isRunning = false;\r\n        dispatch('end', {\r\n          mensaje:'Hola'\r\n        });\r\n      }\r\n  }, 1000)\r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n    h2 {\r\n        margin: 0;\r\n    }\r\n\r\n    .start {\r\n        background: rgb(175, 73, 73);\r\n        width: 100%;\r\n        margin: 10px 0;\r\n    }\r\n\r\n    .start[disabled] {\r\n      background-color: rgb(194, 194, 194);\r\n      cursor: not-allowed;\r\n    }\r\n</style>\r\n\r\n<div bp='grid'>\r\n    <h2 bp=\"offset-5@md 4@md @12sm\">\r\n      Seconds Left: {secondsLeft}\r\n    </h2>\r\n</div>\r\n\r\n<ProgressBar {progress} />\r\n<div bp=\"grid\">\r\n  <button disabled={isRunning} on:click={startTimer} bp=\"offset-5@md 4@md @12sm\" class=\"start\" >Start</button>\r\n</div>"
  ],
  "names": [],
  "mappings": "AA8BI,iBAAE,CAAE,EAAE,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM;IACtB,CAAC;AC/BD,GAAG,eAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC;ACED,mBAAmB,cAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACxC,CAAC,AAED,aAAa,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;IACtC,CAAC;ACmBD,EAAE,cAAC,CAAC,AACA,MAAM,CAAE,CAAC,AACb,CAAC,AAED,MAAM,cAAC,CAAC,AACJ,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAC5B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAClB,CAAC,AAED,MAAM,CAAC,QAAQ,CAAC,cAAC,CAAC,AAChB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,MAAM,CAAE,WAAW,AACrB,CAAC"
}